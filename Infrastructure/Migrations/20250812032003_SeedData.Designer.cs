// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BookAPIContext))]
    [Migration("20250812032003_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookAuthor", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("BookAuthor");

                    b.HasData(
                        new
                        {
                            AuthorsId = 100,
                            BooksId = 200
                        },
                        new
                        {
                            AuthorsId = 101,
                            BooksId = 201
                        },
                        new
                        {
                            AuthorsId = 102,
                            BooksId = 202
                        },
                        new
                        {
                            AuthorsId = 103,
                            BooksId = 203
                        },
                        new
                        {
                            AuthorsId = 104,
                            BooksId = 204
                        },
                        new
                        {
                            AuthorsId = 105,
                            BooksId = 205
                        },
                        new
                        {
                            AuthorsId = 106,
                            BooksId = 206
                        },
                        new
                        {
                            AuthorsId = 107,
                            BooksId = 207
                        },
                        new
                        {
                            AuthorsId = 108,
                            BooksId = 208
                        },
                        new
                        {
                            AuthorsId = 109,
                            BooksId = 209
                        },
                        new
                        {
                            AuthorsId = 100,
                            BooksId = 210
                        },
                        new
                        {
                            AuthorsId = 103,
                            BooksId = 211
                        },
                        new
                        {
                            AuthorsId = 102,
                            BooksId = 212
                        },
                        new
                        {
                            AuthorsId = 101,
                            BooksId = 213
                        },
                        new
                        {
                            AuthorsId = 106,
                            BooksId = 214
                        },
                        new
                        {
                            AuthorsId = 105,
                            BooksId = 215
                        },
                        new
                        {
                            AuthorsId = 108,
                            BooksId = 216
                        },
                        new
                        {
                            AuthorsId = 107,
                            BooksId = 217
                        },
                        new
                        {
                            AuthorsId = 103,
                            BooksId = 218
                        },
                        new
                        {
                            AuthorsId = 100,
                            BooksId = 219
                        });
                });

            modelBuilder.Entity("Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Name = "Gabriel García Márquez"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Isabel Allende"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Mario Vargas Llosa"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Jorge Luis Borges"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Octavio Paz"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Pablo Neruda"
                        },
                        new
                        {
                            Id = 106,
                            Name = "Julio Cortázar"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Carlos Fuentes"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Roberto Bolaño"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Laura Esquivel"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PagesAmount")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 200,
                            ImageURL = "https://images.cdn1.buscalibre.com/fit-in/360x360/61/8d/618d227e8967274cd9589a549adff52d.jpg",
                            PagesAmount = 417,
                            Rating = 5,
                            Summary = "La historia de la familia Buendía a lo largo de siete generaciones en el pueblo ficticio de Macondo.",
                            Title = "Cien años de soledad"
                        },
                        new
                        {
                            Id = 201,
                            ImageURL = "https://images.cdn2.buscalibre.com/fit-in/360x360/c8/fb/c8fb8d4b8c2f4c8a9b1e2d3f4g5h6i7j.jpg",
                            PagesAmount = 433,
                            Rating = 4,
                            Summary = "Una saga familiar que abarca tres generaciones de mujeres en un país latinoamericano.",
                            Title = "La casa de los espíritus"
                        },
                        new
                        {
                            Id = 202,
                            ImageURL = "https://images.cdn3.buscalibre.com/fit-in/360x360/d9/gc/d9gc8e5c9d3f5d9b2e4f6h8i0j2k4l6m.jpg",
                            PagesAmount = 419,
                            Rating = 4,
                            Summary = "Una novela sobre la vida en una academia militar en Lima, Perú.",
                            Title = "La ciudad y los perros"
                        },
                        new
                        {
                            Id = 203,
                            ImageURL = "https://images.cdn4.buscalibre.com/fit-in/360x360/e0/hd/e0hd9f6d0e4g6e0c3f5h7j9k1l3m5n7o.jpg",
                            PagesAmount = 203,
                            Rating = 5,
                            Summary = "Una colección de cuentos que exploran temas filosóficos y metafísicos.",
                            Title = "El Aleph"
                        },
                        new
                        {
                            Id = 204,
                            ImageURL = "https://images.cdn5.buscalibre.com/fit-in/360x360/f1/ie/f1ie0g7e1f5h7f1d4g6i8k0l2m4n6o8p.jpg",
                            PagesAmount = 191,
                            Rating = 4,
                            Summary = "Un ensayo sobre la identidad y psicología del pueblo mexicano.",
                            Title = "El laberinto de la soledad"
                        },
                        new
                        {
                            Id = 205,
                            ImageURL = "https://images.cdn6.buscalibre.com/fit-in/360x360/g2/jf/g2jf1h8f2g6i8g2e5h7j9l1m3n5o7p9q.jpg",
                            PagesAmount = 96,
                            Rating = 5,
                            Summary = "Una colección de poemas de amor que captura la pasión y melancolía juvenil.",
                            Title = "Veinte poemas de amor y una canción desesperada"
                        },
                        new
                        {
                            Id = 206,
                            ImageURL = "https://images.cdn7.buscalibre.com/fit-in/360x360/h3/kg/h3kg2i9g3h7j9h3f6i8k0m2n4o6p8q0r.jpg",
                            PagesAmount = 635,
                            Rating = 4,
                            Summary = "Una novela experimental que puede leerse de múltiples maneras.",
                            Title = "Rayuela"
                        },
                        new
                        {
                            Id = 207,
                            ImageURL = "https://images.cdn8.buscalibre.com/fit-in/360x360/i4/lh/i4lh3j0h4i8k0i4g7j9l1n3o5p7q9r1s.jpg",
                            PagesAmount = 307,
                            Rating = 4,
                            Summary = "La historia de un hombre poderoso en sus últimos momentos de vida.",
                            Title = "La muerte de Artemio Cruz"
                        },
                        new
                        {
                            Id = 208,
                            ImageURL = "https://images.cdn9.buscalibre.com/fit-in/360x360/j5/mi/j5mi4k1i5j9l1j5h8k0m2o4p6q8r0s2t.jpg",
                            PagesAmount = 609,
                            Rating = 4,
                            Summary = "Una novela sobre dos jóvenes poetas que buscan a una misteriosa escritora.",
                            Title = "Los detectives salvajes"
                        },
                        new
                        {
                            Id = 209,
                            ImageURL = "https://images.cdn10.buscalibre.com/fit-in/360x360/k6/nj/k6nj5l2j6k0m2k6i9l1n3p5q7r9s1t3u.jpg",
                            PagesAmount = 246,
                            Rating = 4,
                            Summary = "Una novela que combina recetas de cocina con una historia de amor prohibido.",
                            Title = "Como agua para chocolate"
                        },
                        new
                        {
                            Id = 210,
                            ImageURL = "https://images.cdn11.buscalibre.com/fit-in/360x360/l7/ok/l7ok6m3k7l1n3l7j0m2o4q6r8s0t2u4v.jpg",
                            PagesAmount = 368,
                            Rating = 5,
                            Summary = "Una historia de amor que perdura a través de los años y las circunstancias.",
                            Title = "El amor en los tiempos del cólera"
                        },
                        new
                        {
                            Id = 211,
                            ImageURL = "https://images.cdn12.buscalibre.com/fit-in/360x360/m8/pl/m8pl7n4l8m2o4m8k1n3p5r7s9t1u3v5w.jpg",
                            PagesAmount = 174,
                            Rating = 5,
                            Summary = "Una colección de cuentos que exploran laberintos, bibliotecas infinitas y realidades alternativas.",
                            Title = "Ficciones"
                        },
                        new
                        {
                            Id = 212,
                            ImageURL = "https://images.cdn13.buscalibre.com/fit-in/360x360/n9/qm/n9qm8o5m9n3p5n9l2o4q6s8t0u2v4w6x.jpg",
                            PagesAmount = 447,
                            Rating = 4,
                            Summary = "Una novela autobiográfica sobre el primer matrimonio del autor.",
                            Title = "La tía Julia y el escribidor"
                        },
                        new
                        {
                            Id = 213,
                            ImageURL = "https://images.cdn14.buscalibre.com/fit-in/360x360/o0/rn/o0rn9p6n0o4q6o0m3p5r7t9u1v3w5x7y.jpg",
                            PagesAmount = 271,
                            Rating = 4,
                            Summary = "La historia de una mujer que narra su vida llena de aventuras y desafíos.",
                            Title = "Eva Luna"
                        },
                        new
                        {
                            Id = 214,
                            ImageURL = "https://images.cdn15.buscalibre.com/fit-in/360x360/p1/so/p1so0q7o1p5r7p1n4q6s8u0v2w4x6y8z.jpg",
                            PagesAmount = 564,
                            Rating = 4,
                            Summary = "Una novela experimental sobre la búsqueda del amor y el sentido de la vida.",
                            Title = "Hopscotch"
                        },
                        new
                        {
                            Id = 215,
                            ImageURL = "https://images.cdn16.buscalibre.com/fit-in/360x360/q2/tp/q2tp1r8p2q6s8q2o5r7t9v1w3x5y7z9a.jpg",
                            PagesAmount = 531,
                            Rating = 4,
                            Summary = "Un extenso poema épico sobre la historia y geografía de América Latina.",
                            Title = "Canto general"
                        },
                        new
                        {
                            Id = 216,
                            ImageURL = "https://images.cdn17.buscalibre.com/fit-in/360x360/r3/uq/r3uq2s9q3r7t9r3p6s8u0w2x4y6z8a0b.jpg",
                            PagesAmount = 1119,
                            Rating = 5,
                            Summary = "Una novela póstuma que explora la violencia y el misterio en una ciudad fronteriza.",
                            Title = "2666"
                        },
                        new
                        {
                            Id = 217,
                            ImageURL = "https://images.cdn18.buscalibre.com/fit-in/360x360/s4/vr/s4vr3t0r4s8u0s4q7t9v1x3y5z7a9b1c.jpg",
                            PagesAmount = 783,
                            Rating = 4,
                            Summary = "Una novela épica que abarca quinientos años de historia española y americana.",
                            Title = "Terra Nostra"
                        },
                        new
                        {
                            Id = 218,
                            ImageURL = "https://images.cdn19.buscalibre.com/fit-in/360x360/t5/ws/t5ws4u1s5t9v1t5r8u0w2y4z6a8b0c2d.jpg",
                            PagesAmount = 158,
                            Rating = 4,
                            Summary = "Una novela psicológica sobre un pintor obsesionado con una mujer.",
                            Title = "El túnel"
                        },
                        new
                        {
                            Id = 219,
                            ImageURL = "https://images.cdn20.buscalibre.com/fit-in/360x360/u6/xt/u6xt5v2t6u0w2u6s9v1x3z5a7b9c1d3e.jpg",
                            PagesAmount = 124,
                            Rating = 5,
                            Summary = "Una novela sobre un hombre que busca a su padre en un pueblo fantasmal.",
                            Title = "Pedro Páramo"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookAuthor", b =>
                {
                    b.HasOne("Domain.Entities.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
